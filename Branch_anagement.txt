1.通常合并分支时，会使用快速合并即Fast forward ，如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。
2.下面是实例：
                  git checkout -b dev                                         #创建并切换dev分支
				  修改所在的文件                                              #并且添加和提交文件
				  git checkout master                                         #切换回master分支
				  使用下列命令进行非快速合并：
				  git merge --no-ff -m "merge with no-ff" dev                 #非快速合并
				  使用git   log 查看分支情况
3.分支策略：
在实际开发中，我们应该按照几个基本原则进行分支管理：
首先，master分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；
干活都在dev分支上，也就是说，dev分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev分支合并到master上，在master分支发布1.0版本；
小伙伴们每个人都在dev分支上干活，每个人都有自己的分支，时不时地往dev分支上合并就可以了。


4.总结：
Git分支十分强大，在团队开发中应该充分应用。
合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。

